continue
file.path
file
file.uri
exit
continue
random_url_style_tags.first.to_s
random_url_style_tags.first
random_url_style_tags.first.body
random_url_style_tags
continue
Color.find_or_create_by(hex: color)
model_for_random_url.colors
continue
ColorUrl
model_for_random_url.colors
continue
model_for_random_url.colors
continue
model_for_random_url.color_urls
model_for_random_url.colors
model_for_random_url
model_for_random_url.colors
continue
styles.read
styles.to_s
styles.methods
styles.content
open(href)
styles
href
continue
stylesheet['href']
continue
stylesheet['href']
continue
random_url_body.search('link').count
random_url_body.search('link')
random_url_body
continue
random_url
continue
restart
@random_url
continue
page.base_uri
page.base_url
page.methods
page
page.url
page
page = visit('http://www.randomwebsite.com/cgi-bin/random.pl')
visit('http://www.randomwebsite.com/cgi-bin/random.pl')
url
page = visit("http://www.randomwebsite.com/cgi-bin/random.pl")
continue
page.url
page.page_url
page.to_s
page.html
page.body
page.methods
page.uri
page.url
page = visit("http://www.randomwebsite.com/cgi-bin/random.pl")
visit("http://www.randomwebsite.com/cgi-bin/random.pl")
continue
p.first.attributes['rel'].value
p.first.attributes['rel']
p.first.attributes['rel']['value']
p.first.attributes['rel']
p.first.attributes['href']
p.first.attributes['name']
p.first.attributes
p.first.attributes['value']
p.first.attributes
p.first
p.count
p = page.search('link')
page.search('link').select { |link| link.value }
page.search('link').select { |link| link['value'] }
page.search('link').select { |link| link['type'] }
page.search('link').select { |link| link }
page.search('link')
page.search('link').select { |link| link['type'] && link['type'].match(/css/) || link[' }
@colors
continue
page.uri.to_s
page.uri.url
page.uri.ur
page.uri
page
page.links
page
page.methods
page['url']
page.url
page
continue
restart
@url
continue
styles.body.scan(/#[A-Z0-9]{3,6}/i)
styles.body.match(/#[A-Z0-9]{3,6}/i)
styles.body.match(/#[A-Za-z0-9]{3,6}/i)
styles.body.match(/#[A-Za-z0-9]{3,6}/g)
styles.body.match(/#[A-Za-z0-9]{3,6}/).first
styles.body.match(/#[A-Za-z0-9]{3,6}/)
styles.match(/#[A-Za-z0-9]{3,6}/)
styles.match(/#[A-Za-z0-9]{3,6}/
styles
continue
restart
page.search('link').select { |l| l['type'] && l['type'].match(/css/) }
page.search('link').select { |l| l['type'] && l['type'].match(/css/) }.map { |l| l['type'] }
page.search('link').select { |l| l['type'] && l['type'].match(/css/) }
page.search('link').select { |l| l['type'] && l['type'].match(/css/) }.count
page.search('link').select { |l| l['type'] && l['type'].match(/css/) }
page.search('link').map { |l| l['type'].match(/css/) }
page.search('link').map { |l| l['type'] }.match(/css/)
page.search('link').map { |l| l['type'] }
page.search('link').map(&:rel)
page.search('link').map(&:type)
page.search('link').map(&:name)
page.search('link').first.attributes['href'].value
page.search('link').first.attributes['href']
page.search('link').first.attributes[:href]
page.search('link').first.attributes.href
page.search('link').first.attributes
page.search('link').first
page.search('link')
page.search('a')
page.search('stylesheet')
page.search('style')
page
